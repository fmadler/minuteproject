<?xml version="1.0" encoding="UTF-8"?>
<project default="migrate-to-maven" basedir="." name="Migration">
    <description>This build file will migrate to maven minuteKernel modules</description>
    <!-- ===================================================================== -->
    <!-- import files -->
    <!-- ===================================================================== -->
    <property file="build.properties"/>
    <!-- ===================================================================== -->
    <!-- properties definitions -->
    <!-- ===================================================================== -->
    <!-- LOCAL PROPERTIES
    <property name="project.name" value="minuteProject"/>-->
    <property name="home.dir" value="."/>
    <property name="application.dir" value="${home.dir}/application"/>

    <tstamp>
        <format property='build.time' pattern='yyyy-MM-dd HH:mm:ss'/>
    </tstamp>

    <target name="migrate-to-maven" depends="clean,copy-java-code,copy-groovy-code,copy-config,copy-config-test,copy-resource,copy-velocity-template">
        <title title="TASK archive" projectname="${project.name}" projectdir="${home.dir}"/>
        <description>Perform migration tasks</description>
    </target>

    <!-- target clean -->
    <target name="clean">
        <title title="clean" projectname="${project.name}" projectdir="${home.dir}"/>
        <description>Clean workspace java code + resources</description>
        <delete failonerror="false" includeemptydirs="true">
            <fileset dir="${mvn.kernel.src}"/>
        </delete>
    </target>

    <target name="copy-java-code">
        <title title="copy-java-code" projectname="${project.name}" projectdir="${home.dir}"/>
        <description>Copy java code mvn project</description>
        <macro_copy_java todir="${mvn.kernel.java}" filesetDir="${leg.kernel.java.src}"/>
        <macro_copy_exclude_java todir="${mvn.kernel.java}" filesetDir="${leg.kernel.java.src-patch}" exclusion="org/sqlite/*.java"/>
        <!-- TODO check
        <macro_copy_java todir="${mvn.kernel.java}" filesetDir="${leg.kernel.java.src-patch2" />
        -->
        <macro_copy_java todir="${mvn.kernel.java}" filesetDir="${leg.kernel.java.src-plugin}"/>
<!--

        <macro_copy_java todir="${mvn.kernel.java}" filesetDir="${leg.foundation.java.src}"/>
-->

        <!-- copy unit tests -->
        <macro_copy_java todir="${mvn.kernel.test}" filesetDir="${leg.kernel.java.test}"/>


    </target>

    <target name="copy-groovy-code">
        <title title="copy-groovy-code" projectname="${project.name}" projectdir="${home.dir}"/>
        <macro_copy_groovy todir="${mvn.kernel.groovy}" filesetDir="${leg.kernel.java.src}"/>
        <macro_copy_groovy todir="${mvn.kernel.groovy}" filesetDir="${leg.kernel.java.src-plugin}"/>
    </target>

    <target name="copy-resource">
        <title title="copy-resource" projectname="${project.name}" projectdir="${home.dir}"/>
        <description>Copy resources</description>
        <macro_copy_resource todir="${mvn.kernel.resources}" filesetDir="${leg.kernel.java.src}"/>
        <macro_copy_resource todir="${mvn.kernel.resources}" filesetDir="${leg.kernel.java.src-config}"/>
    </target>

    <target name="copy-velocity-template">
        <title title="copy-velocity-template" projectname="${project.name}" projectdir="${home.dir}"/>
        <description>Copy velocity templates</description>
        <macro_copy_resource todir="${mvn.kernel.templates}" filesetDir="${leg.templates.src}"/>
    </target>

    <target name="copy-config">
        <title title="copy-config" projectname="${project.name}" projectdir="${home.dir}"/>
        <description>Copy kernel config</description>
        <macro_copy_resource todir="${mvn.kernel.config-catalog}" filesetDir="${leg.kernel.config-catalog}"/>
        <macro_copy_resource_type todir="${mvn.kernel.config}" filesetDir="${leg.kernel.config}" type="xsd"/>
    </target>

    <target name="copy-config-test">
        <title title="copy-config" projectname="${project.name}" projectdir="${home.dir}"/>
        <description>Copy kernel config test</description>
        <macro_copy_dir_resource_type todir="${mvn.kernel.config-test}" filesetDir="${leg.kernel.config}" type="xml"/>
        <macro_copy_dir_resource_type todir="${mvn.kernel.config-test}" filesetDir="${leg.kernel.config-demo}" type="xml"/>
        <macro_copy_dir_resource_type todir="${mvn.kernel.config-test}" filesetDir="${leg.kernel.config-3rd}" type="xml"/>
    </target>

    <!-- ===================================================================== -->
    <!-- specific macros definition -->
    <!-- ===================================================================== -->

    <macrodef name="macro_copy_java">
        <attribute name="todir"/>
        <attribute name="filesetDir"/>
        <sequential>
            <echo>* copy @{filesetDir} to @{todir}</echo>
            <copy todir="@{todir}">
                <fileset dir="@{filesetDir}">
                    <include name="**/*.java"/>
                </fileset>
            </copy>
        </sequential>
    </macrodef>
    <macrodef name="macro_copy_exclude_java">
        <attribute name="todir"/>
        <attribute name="filesetDir"/>
        <attribute name="exclusion"/>
        <sequential>
            <copy todir="@{todir}">
                <fileset dir="@{filesetDir}">
                    <include name="**/*.java"/>
                    <exclude name="@{exclusion}" />
                </fileset>
            </copy>
        </sequential>
    </macrodef>
    <macrodef name="macro_copy_groovy">
        <attribute name="todir"/>
        <attribute name="filesetDir"/>
        <sequential>
            <copy todir="@{todir}">
                <fileset dir="@{filesetDir}">
                    <include name="**/*.groovy"/>
                </fileset>
            </copy>
        </sequential>
    </macrodef>

    <macrodef name="macro_copy_resource">
        <attribute name="todir"/>
        <attribute name="filesetDir"/>
        <sequential>
            <title title="copy-macro_copy_resource" projectname="${project.name}" projectdir="${home.dir}"/>
            <copy todir="@{todir}">
                <fileset dir="@{filesetDir}">
                    <include name="**/*.xml"/>
                    <include name="**/*.xsd"/>
                    <include name="**/*.properties"/>
                    <include name="**/*.vm"/>
                </fileset>
            </copy>
        </sequential>
    </macrodef>

    <macrodef name="macro_copy_dir_resource_type">
        <attribute name="todir"/>
        <attribute name="filesetDir"/>
        <attribute name="type"/>
        <sequential>
            <title title="copy-macro_copy_dir_resource_type" projectname="${project.name}" projectdir="${home.dir}"/>
            <copy todir="@{todir}">
                <fileset dir="@{filesetDir}">
                    <include name="*.@{type}"/>
                </fileset>
            </copy>
        </sequential>
    </macrodef>

    <macrodef name="macro_copy_resource_type">
        <attribute name="todir"/>
        <attribute name="filesetDir"/>
        <attribute name="type"/>
        <sequential>
            <title title="copy-macro_copy_resource_type" projectname="${project.name}" projectdir="${home.dir}"/>
            <copy todir="@{todir}">
                <fileset dir="@{filesetDir}">
                    <include name="**/*.@{type}"/>
                </fileset>
            </copy>
        </sequential>
    </macrodef>

    <macrodef name="macro_copy_template">
        <attribute name="todir"/>
        <attribute name="filesetDir"/>
        <sequential>
            <copy todir="@{todir}" overwrite="true">
                <fileset dir="@{filesetDir}">
                    <include name="**/*.java"/>
                    <include name="**/*.groovy"/>
                </fileset>
                <filterset>
                    <filter token='version' value='${project.version}'/>
                    <filter token='build.time' value='${build.time}'/>
                </filterset>
            </copy>
        </sequential>
    </macrodef>

    <macrodef name="macro_copy_code">
        <attribute name="todir"/>
        <attribute name="filesetDir"/>
        <sequential>
            <mkdir dir="@{filesetDir}"/>
            <copy todir="@{todir}">
                <fileset dir="@{filesetDir}">
                    <include name="**/*.java"/>
                    <include name="**/*.groovy"/>
                    <include name="**/*.xml"/>
                    <include name="**/*.properties"/>
                </fileset>
            </copy>
        </sequential>
    </macrodef>

    <macrodef name="macro_copy_for_mvn">
        <attribute name="todir"/>
        <attribute name="fromdir"/>
        <sequential>
            <copy todir="@{todir}" overwrite="true">
                <fileset dir="@{fromdir}">
                    <include name="**/*.*"/>
                </fileset>
            </copy>
        </sequential>
    </macrodef>

    <macrodef name="macro_archive">
        <attribute name="compress"/>
        <attribute name="destdir"/>
        <attribute name="destfile"/>
        <attribute name="classesdir"/>
        <sequential>
            <jar compress="@{compress}" destfile="@{destdir}/@{destfile}">
                <fileset dir="@{classesdir}">
                    <include name="**/*.*"/>
                </fileset>
            </jar>
        </sequential>
    </macrodef>

    <macrodef name="title">
        <attribute name="title"/>
        <attribute name="projectname"/>
        <attribute name="projectdir"/>
        <sequential>
            <echo>***************************</echo>
            <echo>* task @{title}</echo>
            <echo>* on project @{projectname}</echo>
            <echo>***************************</echo>
        </sequential>
    </macrodef>

    <target name="setup-mvn-foundation">
        <macro_copy_for_mvn fromdir="../minuteFoundation/src/main/java" todir="../mvn/minuteFoundation/src/main/java"/>
    </target>


    <property name="ant.kernel.src" value="../minuteKernel/src"/>
    <property name="ant.kernel.src.plugin" value="../minuteKernel/src-plugin"/>
    <property name="ant.kernel.src.patch" value="../minuteKernel/src-patch"/>
    <property name="ant.kernel.src.test" value="../minuteKernel/test"/>

    <property name="mvn.kernel.src.java" value="../mvn/minuteKernel/src/main/java"/>
    <property name="mvn.kernel.src.test.java" value="../mvn/minuteKernel/src/test/java"/>

    <target name="setup-mvn-kernel">
        <macro_copy_for_mvn fromdir="${ant.kernel.src}" todir="${mvn.kernel.src.java}"/>
        <macro_copy_for_mvn fromdir="${ant.kernel.src.plugin}" todir="${mvn.kernel.src.java}"/>
        <macro_copy_for_mvn fromdir="${ant.kernel.src.patch}" todir="${mvn.kernel.src.java}"/>
        <macro_copy_for_mvn fromdir="${ant.kernel.src.test}" todir="${mvn.kernel.src.test.java}"/>
    </target>

    <target name="setup-mvn">
        <antcall target="setup-mvn-foundation"></antcall>
        <antcall target="setup-mvn-kernel"></antcall>
    </target>


</project>
